
**********FileInputStreamEx1.java**********
package chap15;


import java.io.FileInputStream; 
import java.io.FileNotFoundException;
import java.io.IOException;

/*
 * FileInputStream : 파일로 부터 데이터를 읽기
 *    int read() : 1byte를 읽어서 리턴.
 *    int read(byte[] buf) : buf의 크기만큼 읽어서 데이터를 buf에 저장. 실제 읽은 바이트 수 리턴
 *                   데이터를 len 바이트 만큼 읽어서 buf에 start 인덱스 부터 저장.
 *                   실제 읽은 바이트 수 리턴
 */
public class FileInputStreamEx1 {
   public static void main(String[] args) throws IOException {
      FileInputStream fis = new FileInputStream("src/chap15/InputStreamEx1.java");
      System.out.println("**********read() 메서드를 이용하여 읽기");
      int data = 0;
      while((data = fis.read()) != -1) {
         System.out.print((char)data);
      }
      System.out.println("**********read(byte[] buf) 메서드를 이용하여 읽기");
      fis = new FileInputStream("src/chap15/InputStreamEx1.java");
      //fis.available() : 읽기 가능 바이트 수 리턴
      byte[] buf = new byte[fis.available()];
      while((data=fis.read(buf)) != -1) {
         //buf의 0번 인덱스 부터 data 길이 만큼을 문자열 변경
         System.out.println(new String(buf,0,data));
      }
      System.out.println("**********read(byte[] buf, int start, int len) 메서드를 이용하여 읽기");
      fis = new FileInputStream("src/chap15/InputStreamEx1.java");
      buf = new byte[fis.available()];
      while((data=fis.read(buf,0,buf.length)) != -1) {
         System.out.println(new String(buf,0,data));
    }
      
      
   }
}
**********InputStreamEx1.java**********
package chap15;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
/*
 * 자바에서 제공되는 표준 입출력 객체
 * 표준 입력 : InputStream System.in       : 키보드에서 입력.
 * 표준 출력 : PrintStream System.out        : 콘솔 (화면)에 데이터 출력
 * 표준 오류 : PrintStream System.err      : 콘솔(화면)에 데이터 출력
 * 
 * IO스트림 : 데이터 이동 통로, 단방향(입력,출력), 지연(버퍼가 존재)
 * 
 *    입력
 *       바이트 : InputStream  => 1바이트 단위로 읽음.
 *       문자형 : Reader      => 2바이트 단위로 읽음.
 *       바이트형입력스트림 => 문자형 입력스트림 : InputStreamReader
 *    출력
 *       바이트 : OutputStream   => 1바이트 단위로 출력
 *       문자형 : Writer      => 2바이트 단위로 출력
 *       바이트형출력스트림 => 문자형 출력스트림 : OutputStreamWriter
 */
public class InputStreamEx1 {
   public static void main(String[] args) throws IOException {
//      InputStream in = System.in;
      Reader in = new InputStreamReader(System.in);
      int data = 0;
      while((data=in.read()) != -1) {//ctrl+z 끝내기
         System.out.print((char)data);
   }
 }
}
**********ObjectInputStreamEx1.java**********
package chap15;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;

public class ObjectInputStreamEx1 {
	public static void main(String[] args) throws IOException, ClassNotFoundException {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream("object.ser"));
		Customer c1 = (Customer)ois.readObject();
		Customer c2 = (Customer)ois.readObject();
		System.out.println("고객1 :" + c1);
		System.out.println("고객2 :" + c2);
	}
}

**********ObjectInputStreamEx2.java**********
package chap15;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;
/*
 * 상속된 경우 부모클래스 정보는 직렬화 못함
 * implements Serializable를 부모에도 해주면 가능
 */
public class ObjectInputStreamEx2 {
	public static void main(String[] args) throws IOException, ClassNotFoundException {
		ObjectInputStream ois = new ObjectInputStream(new FileInputStream("object2.ser"));
		User c1 = (User)ois.readObject();
		User c2 = (User)ois.readObject();
		System.out.println("사용자1 :" + c1);
		System.out.println("사용자2 :" + c2);
	}

}
